import{a2 as u,v as o,$ as r,u as l}from"./main-55335c70.js";const n={basicConfig:{name:"",from_name:"",from_address:"",cc:"",bcc:"",is_default:!1,driver:"smtp",settings:""},smtpConfig:{host:"",port:null,username:"",password:"",encryption:"tls"},mailgunConfig:{domain:"",secret:"",endpoint:""},sesConfig:{host:"",port:null,encryption:"tls",ses_key:"",ses_secret:""}},S=(h=!1)=>{const m="settings.mail_sender",g=h?window.pinia.defineStore:u,{global:d}=window.i18n;return g({id:"mailSender",state:()=>({mailSenders:[],mail_drivers:[],currentMailSender:{...n.basicConfig},smtpConfig:{...n.smtpConfig},mailgunConfig:{...n.mailgunConfig},sesConfig:{...n.sesConfig},mail_encryptions:["none","tls","ssl","starttls"],isDisable:!1}),getters:{isEdit:t=>!!t.currentMailSender.id},actions:{resetCurrentMailSender(){this.currentMailSender={...n.basicConfig},this.smtpConfig={...n.smtpConfig},this.mailgunConfig={...n.mailgunConfig},this.sesConfig={...n.sesConfig},this.isDisable=!1},fetchMailDrivers(){return new Promise((t,a)=>{o.get("/api/v1/mail-drivers").then(s=>{s.data&&(this.mail_drivers=s.data),t(s)}).catch(s=>{r(s),a(s)})})},fetchMailSenders(t){return new Promise((a,s)=>{o.get("/api/v1/mail-senders",{params:t}).then(e=>{this.mailSenders=e.data.data,a(e)}).catch(e=>{r(e),s(e)})})},fetchMailSender(t){return new Promise((a,s)=>{o.get(`/api/v1/mail-senders/${t}`).then(e=>{if(this.currentMailSender=e.data.data,this.isDisable=e.data.data.is_default,e.data.data.settings){var i=e.data.data.settings;const c=i.encryption==""||i.encryption==null;switch(e.data.data.driver){case"smtp":this.smtpConfig=i,c&&(this.smtpConfig.encryption="none");break;case"mailgun":this.mailgunConfig=i;break;case"ses":this.sesConfig=i,c&&(this.sesConfig.encryption="none");break}}a(e)}).catch(e=>{r(e),s(e)})})},addMailSender(t){const a=l();return new Promise((s,e)=>{o.post("/api/v1/mail-senders",t).then(i=>{this.mailSenders.push(i.data.data),a.showNotification({type:"success",message:d.t(`${m}.created_message`)}),s(i)}).catch(i=>{r(i),e(i)})})},updateMailSender(t){const a=l();return new Promise((s,e)=>{o.put(`/api/v1/mail-senders/${t.id}`,t).then(i=>{if(i.data){let c=this.mailSenders.findIndex(f=>f.id===i.data.data.id);this.mailSenders[c]=t,a.showNotification({type:"success",message:d.t(`${m}.updated_message`)})}s(i)}).catch(i=>{r(i),e(i)})})},deleteMailSender(t){return new Promise((a,s)=>{o.delete(`/api/v1/mail-senders/${t}`).then(e=>{if(e.data.success){let i=this.mailSenders.findIndex(f=>f.id===t);this.mailSenders.splice(i,1),l().showNotification({type:"success",message:d.t(`${m}.deleted_message`)})}a(e)}).catch(e=>{r(e),s(e)})})},sendTestMail(t){return new Promise((a,s)=>{o.post("/api/v1/mail-test",t).then(e=>{const i=l();e.data.success?i.showNotification({type:"success",message:d.t("general.send_mail_successfully")}):i.showNotification({type:"error",message:d.t("validation.something_went_wrong")}),a(e)}).catch(e=>{r(e),s(e)})})}}})()};export{S as u};
